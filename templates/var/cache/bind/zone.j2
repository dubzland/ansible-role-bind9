{% macro print_record(name, type, value) %}
{{ "%-15s" | format(name) }} IN      {{ "%-7s" | format(type) }} {{ value }}
{% endmacro %}
; {{ ansible_managed }}
{% if not zone.dynamic | default(False) %}
; Hash:{{ zone.hash}},Serial:{{ zone.serial }}
{% endif %}
$TTL            604800
$ORIGIN {{ zone.name }}.
@               IN      SOA     {{ zone.nameservers | map(attribute='name') | first }}. {{ zone.hostmaster | default("hostmaster." + zone.name) }}. (
                                {{ "%10s" | format(zone.serial | default(zone_serial.stdout)) }}     ; Serial
                                {{ "%10s" | format(zone.refresh | default("604800")) }}     ; Refresh
                                {{ "%10s" | format(zone.retry | default("86400")) }}     ; Retry
                                {{ "%10s" | format(zone.expire | default("2419200")) }}     ; Expire
                                {{ "%10s" | format(zone.ttl | default("604800")) }} )   ; Negative Cache TTL

{% if zone.nameservers is defined and zone.nameservers %}
{%   for ns in zone.nameservers %}
                IN      NS      {{ ns.name }}.
{%   endfor %}
{% endif %}
{% if zone.mailservers is defined and zone.mailservers %}
{%   for mx in zone.mailservers %}
                IN      MX   {{ loop.index * 10 }} {{ mx }}.
{%   endfor %}
{% endif %}
{% if zone.nameservers is defined and zone.nameservers %}
{%   for ns in zone.nameservers -%}
{%     if ns.ipv4_address is defined and ns.ipv4_address %}
{%       if (zone.ptr | default(False)) %}
{{ print_record((ns.ipv4_address.split('.') | last), 'PTR', ns.name + '.') }}
{%       else %}
{{ print_record((ns.name.split('.') | first), 'A', ns.ipv4_address) -}}
{%       endif %}
{%     endif %}
{%-  endfor %}
{% endif %}
{% if not (zone.dynamic | default(False)) %}
{%   if zone.records is defined and zone.records %}
{%     for record in zone.records %}
{{ print_record(record.name, record.type, record.value) -}}
{%-    endfor %}
{%   endif %}
{% endif %}
